{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string"
      },
      "adminPassword": {
        "type": "securestring"
      },
      "azureUserName": {
        "type": "string"
      },
      "azurePassword": {
        "type": "securestring"
      },
      "ODLID": {
        "type": "string"
      },
      "DeploymentID": {
        "type": "string"
      },
      "trainerUserName": {
        "type": "string"
      },
      "trainerUserPassword": {
        "type": "string"
      }
    },
    "variables": {
      "cloudlabsCommon": "[concat(' -AzureUserName ', parameters('AzureUserName'), ' -AzurePassword ', parameters('AzurePassword'), ' -AzureTenantID ', variables('AzureTenantID'), ' -AzureSubscriptionID ', variables('AzureSubscriptionID'), ' -ODLID ', parameters('ODLID'), ' -DeploymentID ', parameters('DeploymentID'), ' -adminPassword ', parameters('adminPassword'))]",
      "Enable-CloudLabsEmbeddedShadow": "[concat(' -vmAdminUsername ', parameters('adminUsername'), ' -trainerUserName ', parameters('trainerUserName'), ' -trainerUserPassword ', parameters('trainerUserPassword'))]",
      "AzureSubscriptionID": "[subscription().subscriptionId]",
      "AzureTenantID": "[subscription().tenantId]",
      "location": "[resourceGroup().location]",
      "rgName": "[resourceGroup().name]",
      "winvirtualMachineName": "[concat('labvm-',parameters('DeploymentID'))]",
      "networkInterfaceName": "[concat(variables('winvirtualMachineName'), '-nic')]",
      "publicIpAddressName": "[concat('labvmip', uniqueString(resourceGroup().id))]",
      "networkSecurityGroupName": "[concat('nsg-',parameters('DeploymentID'))]",
      "sqlminetworkSecurityGroupName": "[concat('sqlmi-nsg-',parameters('DeploymentID'))]",
      "virtualNetworkName": "[concat('vnet-',parameters('DeploymentID'))]",
      "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
      "subnetname": "subnet",
      "fabricname": "[concat('fabric',parameters('DeploymentID'))]",
      "misubnetname": "sqlmisubnet",
      "subnetRef": "[concat(variables('vnetID'),'/subnets/', variables('subnetname'))]",
      "sqlServerName": "[concat('sqlserver-',parameters('DeploymentID'))]",
      "sqlDatabaseName": "samplesqldb",
      "sqlAdminUsername": "adminuser",
      "sqlAdminPassword": "root@123456",
      "cosmosDbAccountName": "[concat('cosmosdb-',parameters('DeploymentID'))]",
      "sqlMiName": "[concat('sqlmi-',parameters('DeploymentID'))]",
      "sqlMiAdminUsername": "miadminuser",
      "sqlMiAdminPassword": "Root@12345678901",
      "routeTableName": "[concat('routetable-',parameters('DeploymentID'))]"
    },
    "resources": [
      {
        "apiVersion": "2016-09-01",
        "name": "pid-e843308b-3ce2-42a2-b743-2f21b36a5e68",
        "type": "Microsoft.Resources/deployments",
        "properties": {
          "mode": "Incremental",
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "resources": []
          }
        }
      },
         {
            "apiVersion": "2022-07-01-preview",
            "name": "[variables('fabricname')]",
            "location":  "[resourceGroup().location]",
            "dependsOn": [
                "WaitSection"
            ],
            "sku": {
                "name": "F2",
                "tier": "Fabric"
            },
            "properties": {
                "administration": {
                    "members": [
                        "[parameters('azureUserName')]"
                    ]
                }
            },
            "type": "Microsoft.Fabric/capacities"
        },
      {
        "name": "[variables('winvirtualMachineName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2017-03-30",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
        ],
        "properties": {
          "osProfile": {
            "computerName": "[variables('winvirtualMachineName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "windowsConfiguration": {
              "provisionVmAgent": "true"
            }
          },
          "hardwareProfile": {
            "vmSize": "Standard_B2s"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2022-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": [
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              }
            ]
          }
        },
        "resources": [
          {
            "type": "extensions",
            "name": "vmExtension",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', variables('winvirtualMachineName'))]"
            ],
            "properties": {
              "publisher": "Microsoft.Compute",
              "type": "CustomScriptExtension",
              "typeHandlerVersion": "1.8",
              "autoUpgradeMinorVersion": "true",
              "settings": {
                "fileUris": [
                  "https://fabricmirroring.blob.core.windows.net/fabric/deploy.ps1",
                  "https://experienceazure.blob.core.windows.net/templates/cloudlabs-common/cloudlabs-windows-functions.ps1"
                ],
                "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File deploy.ps1', variables('cloudlabsCommon'), variables('Enable-CloudLabsEmbeddedShadow'))]"
              }
            }
          }
        ]
      },
      {
        "name": "[variables('virtualNetworkName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2018-04-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sqlminetworkSecurityGroupName'))]",
          "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetname')]",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "delegations": [
                  {
                    "name": "sqlManagedInstanceDelegation",
                    "properties": {
                      "serviceName": "Microsoft.Sql/managedInstances"
                    }
                  }
                ]
              }
            },
            {
              "name": "[variables('misubnetname')]",
              "properties": {
                "addressPrefix": "10.0.1.0/24",
                "routeTable": {
                  "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                },
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('sqlminetworkSecurityGroupName'))]"
                },
                "delegations": [
                  {
                    "name": "sqlManagedInstanceDelegation",
                    "properties": {
                      "serviceName": "Microsoft.Sql/managedInstances"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2021-08-01",
        "name": "[variables('sqlminetworkSecurityGroupName')]",
        "location": "[variables('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "allow_tds_inbound",
              "properties": {
                "description": "Allow access to data",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "1433",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound"
              }
            },
               {
              "name": "allow_sqlmi_public_inbound",
              "properties": {
                "description": "Allow access to data",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "3342",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 120,
                "direction": "Inbound"
              }
            },
            {
              "name": "allow_redirect_inbound",
              "properties": {
                "description": "Allow inbound redirect traffic to Managed Instance inside the virtual network",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "11000-11999",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1100,
                "direction": "Inbound"
              }
            },
            {
              "name": "deny_all_inbound",
              "properties": {
                "description": "Deny all other inbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 4096,
                "direction": "Inbound"
              }
            },
            {
              "name": "deny_all_outbound",
              "properties": {
                "description": "Deny all other outbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 4096,
                "direction": "Outbound"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/routeTables",
        "apiVersion": "2021-08-01",
        "name": "[variables('routeTableName')]",
        "location": "[variables('location')]",
        "properties": {
          "disableBgpRoutePropagation": false
        }
      },
      {
        "name": "[variables('networkInterfaceName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2016-09-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
          "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
          }
        }
      },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "kind": "AzurePowerShell",
            "name": "WaitSection",
            "location": "[resourceGroup().location]",
            "properties": {
                "azPowerShellVersion": "9.7",
                "scriptContent": "start-sleep -Seconds 180",
                "cleanupPreference": "Always",
                "retentionInterval": "PT1H"
            }
        },
      {
        "apiVersion": "2017-06-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIpAddressName')]",
        "comments": "Public IP",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "Public IP"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[variables('publicIPAddressName')]"
          }
        }
      },
      {
        "name": "[variables('networkSecurityGroupName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2017-06-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-rdp",
              "properties": {
                "priority": 1000,
                "protocol": "Tcp",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "3389"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Sql/servers",
        "apiVersion": "2022-05-01-preview",
        "name": "[variables('sqlServerName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "administratorLogin": "[variables('sqlAdminUsername')]",
          "administratorLoginPassword": "[variables('sqlAdminPassword')]",
          "minimalTlsVersion": "1.2",
          "publicNetworkAccess": "Enabled"
        },
        "resources": [
          {
            "type": "databases",
            "location": "[resourceGroup().location]",
            "apiVersion": "2022-05-01-preview",
            "name": "[variables('sqlDatabaseName')]",
            "dependsOn": [
              "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
            ],
            "properties": {
              "sampleName": "AdventureWorksLT"
            },
            "sku": {
              "name": "GP_S_Gen5_2",     
              "tier": "GeneralPurpose",
              "family": "Gen5",
              "capacity": 2
            }
          }
        ]
      },
       {
        "type": "Microsoft.DocumentDB/databaseAccounts",
        "apiVersion": "2015-04-08",
        "name": "[variables('cosmosDbAccountName')]",
        "location": "[resourceGroup().location]",
        "kind": "GlobalDocumentDB",
        "properties": {
          "databaseAccountOfferType": "Standard",
          "locations": [
            {
              "locationName": "[resourceGroup().location]",
              "failoverPriority": 0
            }
          ]
        }
      },     
      {
        "type": "Microsoft.Sql/managedInstances",
        "apiVersion": "2015-05-01-preview",
        "name": "[variables('sqlMiName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
        ],
        "properties": {
          "administratorLogin": "[variables('sqlMiAdminUsername')]",
          "administratorLoginPassword": "[variables('sqlMiAdminPassword')]",
          "subnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('misubnetname'))]",
          "licenseType": "LicenseIncluded",
          "vCores": 4,
          "storageSizeInGB": 32,
          "collation": "SQL_Latin1_General_CP1_CI_AS",
          "databaseFormat": "AlwaysUpToDate",
          "publicDataEndpointEnabled": true
        },
        "resources": [
          {
            "type": "databases",
            "apiVersion": "2021-11-01-preview",
            "location": "[resourceGroup().location]",
            "name": "SampleDatabase",
            "dependsOn": [
              "[resourceId('Microsoft.Sql/managedInstances', variables('sqlMiName'))]"
            ],
            "properties": {
              "createMode": "Default",
              "sampleName": "AdventureWorksLT"
            }
          }
        ]
      }
    ],
    "outputs": {
      "DeploymentID": {
        "type": "string",
        "value": "[parameters('DeploymentID')]"
    },
    "LabVM Admin Username": {
        "type": "string",
        "value": "[parameters('adminUsername')]"
    },
    "LabVM Admin Password": {
        "type": "string",
        "value": "[parameters('adminPassword')]"
    },
    "LabVM DNS Name": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpAddressName'))).dnsSettings.fqdn]"
    },
    "SQLMI-URL": {
      "type": "String",
      "value": "[reference(variables('sqlMiName')).fullyQualifiedDomainName]"
  },
  "Sqlmi administrator login": {
      "type": "String",
      "value": "[variables('sqlMiAdminUsername')]"
  },
  "Sqlmi administrator password": {
      "type": "String",
      "value": "[variables('sqlMiAdminPassword')]"
  },
  "SQL Server Username": {
    "type": "string",
    "value": "[variables('sqlAdminUsername')]"
},
"SQL Server Password": {
    "type": "string",
    "value": "[variables('sqlAdminPassword')]"
},
"SQL Server Name": {
    "type": "string",
    "value": "[variables('sqlServerName')]"
},
"SQL databases Name": {
    "type": "string",
    "value": "[variables('sqlDatabaseName')]"
},
"SnowFlake Endpoint": {
    "type": "string",
    "value": "dlhdzca-bab11165.snowflakecomputing.com"
},
"SnowFlake Username": {
    "type": "string",
    "value": "FABRIC_MIRRORING"
},
"SnowFlake Password": {
    "type": "string",
    "value": "8UpfRpExVDXv2AC"
},
      "Trainer Password": {
        "type": "string",
        "value": "[parameters('adminPassword')]"
      }
    }
  }
